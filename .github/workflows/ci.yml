name: "Hitas CI"

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: "Build"
    runs-on: ubuntu-latest

    # Majority of the tests require database
    services:
      postgres:
        image: postgres:13.7
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: "Checkout code"
      uses: actions/checkout@v3

    # Frontend
    - name: Frontend - Set Node.js 16.x
      uses: actions/setup-node@v3
      with:
        node-version: 16.x

    - name: Frontend - Install dependencies
      uses: borales/actions-yarn@v4
      with:
        dir: 'frontend'
        cmd: install

    - name: Frontend - Check for ESLint issues
      uses: borales/actions-yarn@v4
      with:
        dir: 'frontend'
        cmd: eslint-check

    - name: Frontend - Check for Prettier issues
      uses: borales/actions-yarn@v4
      with:
        dir: 'frontend'
        cmd: prettier-check

    # Backend
    - name: "Set up Python 3.10"
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: "Install Poetry"
      run: >
        curl -sSL https://install.python-poetry.org | POETRY_VERSION=1.3.1 python -

    - name: "Install test dependencies"
      run: cd backend && ~/.local/bin/poetry install --no-root
      env:
        POETRY_VIRTUALENVS_CREATE: 0

    - name: "Run pre-commit on backend"
      run: >
        cd backend
        && pre-commit install
        && pre-commit run --from-ref origin/HEAD --to-ref HEAD

    - name: "Run tests"
      env:
        SECRET_KEY: xxx
        DATABASE_URL: postgres://postgres:postgres@localhost:5432/github_actions
      run: cd backend && pytest -vvv --cov=. .

    - name: "Test for migration issues"
      env:
        SECRET_KEY: xxx
      run: cd backend && ./manage.py makemigrations --check --no-color --no-input --dry-run

    - name: "Test for building frontend"
      run: cd frontend && docker build .

    - name: "Test for building backend"
      run: cd backend && docker build .
