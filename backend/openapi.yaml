openapi: 3.0.3
info:
  title: Hitas Helsinki APIs
  version: 1.0.0
  description: API definitions for Hitas Helsinki project.
paths:
  /api/v1/housing-companies:
    get:
      description: Fetch housing companies
      operationId: list-housing-companies
      tags:
        - Housing companies
      parameters:
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
        - name: display_name
          description: Search housing companies with display name containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: helmi
        - name: street_address
          description: Search housing companies with street address containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Hannunkatu
        - name: postal_code
          description: Search housing companies located in given postal code
          required: false
          in: query
          schema:
            type: string
            pattern: '^\d{5}$'
            example: "00100"
        - name: developer
          description: Search housing companies with developer name containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Rakennuttaja
        - name: property_manager
          description: Search housing companies with property manager name matching to the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: isännöinti
        - name: archive_id
          description: Search housing companies with exact archive id
          required: false
          in: query
          schema:
            type: number
            minimum: 1
            example: 421
      responses:
        '200':
          description: Successfully fetched list of housing companies
          content:
            application/json:
              schema:
                description: Single page of housing companies
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of housing companies
                    type: array
                    items:
                      $ref: '#/components/schemas/HousingCompany'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new housing company
      operationId: create-housing-company
      tags:
        - Housing companies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/HousingCompanyDetails'
      responses:
        '201':
          description: Successfully added a new housing company
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/HousingCompanyDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}:
    get:
      description: Fetch a single housing company by id
      operationId: read-housing-company
      tags:
        - Housing companies
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a housing company details
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/HousingCompanyDetails'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a housing company
      operationId: update-housing-company
      tags:
        - Housing companies
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/HousingCompanyDetails'
      responses:
        '200':
          description: Successfully updated a housing company
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/HousingCompanyDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a housing company
      operationId: delete-housing-company
      tags:
        - Housing companies
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/real-estates:
    get:
      description: Fetch real estates for a housing company
      operationId: list-housing-company-real-estates
      tags:
        - Real estates
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of real estates
          content:
            application/json:
              schema:
                description: Single page of real estates
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of real estates
                    type: array
                    additionalProperties: false
                    items:
                      $ref: '#/components/schemas/RealEstate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new real estate for a housing company
      operationId: create-housing-company-real-estate
      tags:
        - Real estates
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/RealEstate'
      responses:
        '201':
          description: Successfully added a new real estate for a housing company
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/RealEstate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/real-estates/{real_estate_id}:
    get:
      description: Fetch a single real estate by id
      operationId: read-housing-company-real-estate
      tags:
        - Real estates
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
      responses:
        '200':
          description: Successfully read a housing company's real estate
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/RealEstate'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a real estate for a housing company
      operationId: update-housing-company-real-estate
      tags:
        - Real estates
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/RealEstate'
      responses:
        '200':
          description: Successfully updated an existing real estate for a housing company
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/RealEstate'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a real estate
      operationId: delete-housing-company-real-estate
      tags:
        - Real estates
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
      responses:
        '204':
          description: Real estate successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/real-estates/{real_estate_id}/buildings:
    get:
      description: Fetch buildings for a housing company's real estate
      operationId: list-housing-company-real-estates-buildings
      tags:
        - Buildings
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of buildings
          content:
            application/json:
              schema:
                description: Single page of buildings
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of buildings
                    type: array
                    items:
                      $ref: '#/components/schemas/Building'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new building for a housing company's real estate
      operationId: create-housing-company-real-estate-building
      tags:
        - Buildings
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/Building'
      responses:
        '201':
          description: Successfully added a new building for a housing company real estate
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/Building'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/real-estates/{real_estate_id}/buildings/{building_id}:
    get:
      description: Fetch a single real estate by id
      operationId: read-housing-company-real-estate-building
      tags:
        - Buildings
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
        - name: building_id
          required: true
          in: path
          description: Building ID
          schema:
            type: string
            example: dc1072975bab4ba69f64814f021c6785
      responses:
        '200':
          description: Successfully read a building details.
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/Building'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a building for a housing company's real estate
      operationId: update-housing-company-real-estate-building
      tags:
        - Buildings
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
        - name: building_id
          required: true
          in: path
          description: Building ID
          schema:
            type: string
            example: dc1072975bab4ba69f64814f021c6785
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/Building'
      responses:
        '200':
          description: Successfully updated an existing building for a housing company's real estate
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/Building'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a building
      operationId: delete-housing-company-real-estate-building
      tags:
        - Buildings
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: real_estate_id
          required: true
          in: path
          description: Real estate ID
          schema:
            type: string
            example: c86eaa399ce141d89d962d46bb81ab2b
        - name: building_id
          required: true
          in: path
          description: Building ID
          schema:
            type: string
            example: dc1072975bab4ba69f64814f021c6785
      responses:
        '204':
          description: Building successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/apartments:
    get:
      description: Fetch apartments for a housing company
      operationId: list-apartments
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of apartments
          content:
            application/json:
              schema:
                description: Single page of apartments
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of apartments
                    type: array
                    items:
                      $ref: '#/components/schemas/Apartment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new apartment for a housing company
      operationId: create-apartment
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/ApartmentDetails'
      responses:
        '201':
          description: Successfully added a new apartment
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/ApartmentDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/housing-companies/{housing_company_id}/apartments/{apartment_id}:
    get:
      description: Fetch a single apartment by id
      operationId: read-apartment
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: apartment_id
          required: true
          in: path
          description: Apartment ID
          schema:
            type: string
            example: b477389cb3514fb1b444052a39bfb65d
      responses:
        '200':
          description: Successfully read an apartment details
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/ApartmentDetails'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update an apartment
      operationId: update-apartment
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: apartment_id
          required: true
          in: path
          description: Apartment ID
          schema:
            type: string
            example: b477389cb3514fb1b444052a39bfb65d
      requestBody:
        required: true
        content:
          application/json:
            schema:
              additionalProperties: false
              $ref: '#/components/schemas/ApartmentDetails'
      responses:
        '200':
          description: Successfully updated an apartment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApartmentDetails'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove an apartment
      operationId: delete-apartment
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: apartment_id
          required: true
          in: path
          description: Apartment ID
          schema:
            type: string
            example: b477389cb3514fb1b444052a39bfb65d
      responses:
        '204':
          description: Apartment successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/housing-companies/{housing_company_id}/apartments/{apartment_id}/maximum-price:
    get:
      description: Read a single apartment's maximum price calculation
      operationId: read-apartment-max-price
      tags:
        - Apartments
      parameters:
        - name: housing_company_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
        - name: apartment_id
          required: true
          in: path
          description: Apartment ID
          schema:
            type: string
            example: b477389cb3514fb1b444052a39bfb65d
        - name: calculation_date
          required: false
          in: query
          description: |-
            Date which is used for calculating the maximum price. This cannot be in the future.
            This mainly affects which indices are used and the validity period.
          schema:
            type: string
            format: date
            example: 2022-07-05
        - name: apartment_share_housing_company_loans
          required: false
          in: query
          description: |-
            How much the apartment's share of the housing company loans are on the calculation date
          schema:
            type: integer
            minimum: 0
            example: 2500
      responses:
        '200':
          description: Successfully read an apartment's maximum price
          content:
            application/json:
              schema:
                additionalProperties: false
                $ref: '#/components/schemas/ApartmentMaxPrice'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/apartments:
    get:
      description: List and search all apartments across all housing companies
      operationId: list-all-apartments
      tags:
        - Apartments
      parameters:
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
        - name: housing_company_name
          description: Search apartments that belong to housing companies with display name containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: helmi
        - name: street_address
          description: Search apartments with street address containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Hannunkatu
        - name: postal_code
          description: Search apartments located in given postal code
          required: false
          in: query
          schema:
            type: string
            pattern: '^\d{5}$'
            example: "00100"
        - name: owner_name
          description: Search apartments whose owner first name or last name contains the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: matti
        - name: owner_identifier
          description: Search apartments whose social security number matches the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            maxLength: 11
            example: 131052-308T
      responses:
        '200':
          description: Successfully fetched list of apartments
          content:
            application/json:
              schema:
                description: Single page of apartments
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of apartments
                    type: array
                    items:
                      $ref: '#/components/schemas/Apartment'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/owners:
    get:
      description: Fetch owners
      operationId: list-owners
      tags:
        - Owners
      parameters:
        - name: name
          description: Search owners with name containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Matti
        - name: identifier
          description: Search owners whose identifier (social security number, business id, etc) matches the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 11
            maxLength: 11
            example: 131052-308T
        - name: email
          description: Search owners whose email address matches the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: matti.meikalainen@example.com
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of owners
          content:
            application/json:
              schema:
                description: Single page of owners
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of owners
                    type: array
                    items:
                      $ref: '#/components/schemas/Owner'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new owner
      operationId: create-owner
      tags:
        - Owners
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
      responses:
        '201':
          description: Successfully added a new owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/owners/{owner_id}:
    get:
      description: Fetch a single owner by id
      operationId: read-owner
      tags:
        - Owners
      parameters:
        - name: owner_id
          required: true
          in: path
          description: Owner ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a owner details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a owner
      operationId: update-owner
      tags:
        - Owners
      parameters:
        - name: owner_id
          required: true
          in: path
          description: Owner ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Owner'
      responses:
        '200':
          description: Successfully updated a owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a owner
      operationId: delete-owner
      tags:
        - Owners
      parameters:
        - name: owner_id
          required: true
          in: path
          description: Owner ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Owner successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/property-managers:
    get:
      description: Fetch property managers
      operationId: list-property-managers
      tags:
        - Property managers
      parameters:
        - name: name
          description: Search property managers with name containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Matti
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of property managers
          content:
            application/json:
              schema:
                description: Single page of property managers
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of property managers
                    type: array
                    items:
                      $ref: '#/components/schemas/PropertyManager'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new property manager
      operationId: create-property-manager
      tags:
        - Property managers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManager'
      responses:
        '201':
          description: Successfully added a new property manager
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManager'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/property-managers/{property_manager_id}:
    get:
      description: Fetch a single property manager by id
      operationId: read-property-manager
      tags:
        - Property managers
      parameters:
        - name: property_manager_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a property manager details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManager'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a property manager
      operationId: update-property-manager
      tags:
        - Property managers
      parameters:
        - name: property_manager_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManager'
      responses:
        '200':
          description: Successfully updated a property manager
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManager'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a property manager
      operationId: delete-property-manager
      tags:
        - Property managers
      parameters:
        - name: property_manager_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  # Codes

  /api/v1/developers:
    get:
      description: Fetch developers
      operationId: list-developers
      tags:
        - Developers
      parameters:
        - name: value
          description: Search developers with value containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Sato
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of developers
          content:
            application/json:
              schema:
                description: Single page of developers
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of developers
                    type: array
                    items:
                      $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new developer
      operationId: create-developer
      tags:
        - Developers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '201':
          description: Successfully added a new developer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/developers/{developer_id}:
    get:
      description: Fetch a single developer by id
      operationId: read-developer
      tags:
        - Developers
      parameters:
        - name: developer_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a developer details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a developer
      operationId: update-developer
      tags:
        - Developers
      parameters:
        - name: developer_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: Successfully updated a developer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a developer
      operationId: delete-developer
      tags:
        - Developers
      parameters:
        - name: developer_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/postal-codes:
    get:
      description: Fetch postal codes
      operationId: list-postal-codes
      tags:
        - Postal codes
      parameters:
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of postal codes
          content:
            application/json:
              schema:
                description: Single page of postal codes
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of postal codes
                    type: array
                    items:
                      $ref: '#/components/schemas/HitasPostalCode'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new postal code
      operationId: create-postal-code
      tags:
        - Postal codes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HitasPostalCode'
      responses:
        '201':
          description: Successfully added a new postal code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HitasPostalCode'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/postal-codes/{postal_code_id}:
    get:
      description: Fetch a single postal code by id
      operationId: read-postal-code
      tags:
        - Postal codes
      parameters:
        - name: postal_code_id
          required: true
          in: path
          description: Postal code ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a postal code details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HitasPostalCode'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a postal code
      operationId: update-postal-code
      tags:
        - Postal codes
      parameters:
        - name: postal_code_id
          required: true
          in: path
          description: Postal code ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HitasPostalCode'
      responses:
        '200':
          description: Successfully updated a postal code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HitasPostalCode'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a postal code
      operationId: delete-postal-code
      tags:
        - Postal codes
      parameters:
        - name: postal_code_id
          required: true
          in: path
          description: Postal code ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Postal code successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/building-types:
    get:
      description: Fetch building types
      operationId: list-building-types
      tags:
        - Building types
      parameters:
        - name: value
          description: Search building types with value containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: kerrostalo
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of building types
          content:
            application/json:
              schema:
                description: Single page of building types
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of building types
                    type: array
                    items:
                      $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new building type
      operationId: create-building-type
      tags:
        - Building types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '201':
          description: Successfully added a new building type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/building-types/{building_type_id}:
    get:
      description: Fetch a single building type by id
      operationId: read-building-type
      tags:
        - Building types
      parameters:
        - name: building_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a building type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a building type
      operationId: update-building-type
      tags:
        - Building types
      parameters:
        - name: building_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: Successfully updated a building type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a building type
      operationId: delete-building-type
      tags:
        - Building types
      parameters:
        - name: building_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/financing-methods:
    get:
      description: Fetch financing methods
      operationId: list-financing-methods
      tags:
        - Financing methods
      parameters:
        - name: value
          description: Search financing methods with value containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: Hitas II
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of financing methods
          content:
            application/json:
              schema:
                description: Single page of financing methods
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of financing methods
                    type: array
                    items:
                      $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new financing method
      operationId: create-financing-method
      tags:
        - Financing methods
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '201':
          description: Successfully added a new financing method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/financing-methods/{financing_method_id}:
    get:
      description: Fetch a single financing method by id
      operationId: read-financing-method
      tags:
        - Financing methods
      parameters:
        - name: financing_method_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read a financing method details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update a financing method
      operationId: update-financing-method
      tags:
        - Financing methods
      parameters:
        - name: financing_method_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: Successfully updated a financing method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove a financing method
      operationId: delete-financing-method
      tags:
        - Financing methods
      parameters:
        - name: financing_method_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'


  /api/v1/apartment-types:
    get:
      description: Fetch apartment types
      operationId: list-apartment-types
      tags:
        - Apartment types
      parameters:
        - name: value
          description: Search apartment types with value containing the given search string (case-insensitive)
          required: false
          in: query
          schema:
            type: string
            minLength: 2
            example: h+kk
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of apartment types
          content:
            application/json:
              schema:
                description: Single page of apartment types
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of apartment types
                    type: array
                    items:
                      $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      description: Add a new apartment type
      operationId: create-apartment-type
      tags:
        - Apartment types
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '201':
          description: Successfully added a new apartment type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/apartment-types/{apartment_type_id}:
    get:
      description: Fetch a single apartment type by id
      operationId: read-apartment-type
      tags:
        - Apartment types
      parameters:
        - name: apartment_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '200':
          description: Successfully read an apartment type details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update an apartment type
      operationId: update-apartment-type
      tags:
        - Apartment types
      parameters:
        - name: apartment_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Code'
      responses:
        '200':
          description: Successfully updated an apartment type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Code'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '415':
          $ref: '#/components/responses/UnsupportedMediaType'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      description: Remove an apartment type
      operationId: delete-apartment-type
      tags:
        - Apartment types
      parameters:
        - name: apartment_type_id
          required: true
          in: path
          description: Housing company ID
          schema:
            type: string
            example: a3181b8fa60b47df8ccba0d554a913bb
      responses:
        '204':
          description: Housing company successfully removed.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  # Indices

  /api/v1/indices/{index}:
    get:
      description: Fetch list of indices
      operationId: list-index
      tags:
        - Indices
      parameters:
        - $ref: '#/components/parameters/IndexNameParameter'
        - $ref: '#/components/parameters/PagingLimitParameter'
        - $ref: '#/components/parameters/PagingPageParameter'
      responses:
        '200':
          description: Successfully fetched list of indices
          content:
            application/json:
              schema:
                description: Single page of indices
                type: object
                additionalProperties: false
                required:
                  - page
                  - contents
                properties:
                  page:
                    $ref: '#/components/schemas/PageInfo'
                  contents:
                    description: List of indices
                    type: array
                    items:
                      $ref: '#/components/schemas/Index'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/indices/{index}/{month}:
    get:
      description: Read a single index by month
      operationId: read-index
      tags:
        - Indices
      parameters:
        - $ref: '#/components/parameters/IndexNameParameter'
        - name: month
          required: true
          in: path
          description: Month
          schema:
            $ref: '#/components/schemas/YearMonth'
      responses:
        '200':
          description: Successfully read a single index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Index'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      description: Update index by month
      operationId: update-index
      tags:
        - Indices
      parameters:
        - $ref: '#/components/parameters/IndexNameParameter'
        - name: month
          required: true
          in: path
          description: Month
          schema:
            $ref: '#/components/schemas/YearMonth'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Index'
      responses:
        '200':
          description: Successfully updated a single index
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Index'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    PagingLimitParameter:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        format: int32
        default: 10
        minimum: 1
        maximum: 100
      description: Specifies how many results are returned per page

    PagingPageParameter:
      in: query
      name: page
      required: false
      schema:
        type: integer
        format: int32
        default: 1
        minimum: 1
      description: Specifies the index of the returned page

    IndexNameParameter:
      in: path
      name: index
      required: true
      schema:
        description: |-
          Index name. Can have one of the following values:

          - max-value-index
          - market-price-index
          - market-price-index-2005-equal-100
          - construction-price-index
          - construction-price-index-2005-equal-100
        type: string
        example: max-value-index
        x-extensible-enum:
          - max-value-index
          - market-price-index
          - market-price-index-2005-equal-100
          - construction-price-index
          - construction-price-index-2005-equal-100
      description: Specifies the index name used

  schemas:
    PageInfo:
      description: Page metadata
      type: object
      additionalProperties: false
      required:
        - size
        - total_items
        - current_page
        - total_pages
        - links
      properties:
        size:
          description: Size of the returned page
          type: integer
          format: int32
          minimum: 0
          example: 10
        total_items:
          description: Total items across all of the pages
          type: integer
          format: int32
          minimum: 0
          example: 100
        current_page:
          description: Current page number
          type: integer
          format: int32
          minimum: 1
          example: 1
        total_pages:
          description: Total number of pages
          type: integer
          format: int32
          minimum: 0
          example: 5
        links:
          description: Links to other pages
          type: object
          additionalProperties: false
          properties:
            next:
              description: Link to next page
              type: string
              nullable: true
              example: 'https://example.com/api/v1/housing-companies?page=4'
            previous:
              description: Link to previous page
              type: string
              nullable: true
              example: 'https://example.com/api/v1/housing-companies?page=2'

    HousingCompany:
      description: Single housing company
      type: object
      additionalProperties: false
      required:
        - address
        - area
        - date
        - id
        - name
        - state
      properties:
        id:
          description: Housing company ID
          type: string
          example: a3181b8fa60b47df8ccba0d554a913bb
          readOnly: true
        name:
          description: Name of the housing company
          type: string
          example: Taloyhtiö Helmi
          maxLength: 1024
        state:
          $ref: '#/components/schemas/HousingCompanyState'
        address:
          $ref: '#/components/schemas/HitasHousingCompanyAddress'
        area:
          description: Hitas cost area information related to the housing company
          type: object
          additionalProperties: false
          readOnly: true
          required:
            - name
            - cost_area
          properties:
            name:
              description: Area name based on the postal code
              type: string
              example: Helsinki Keskusta - Etu-Töölö
            cost_area:
              description: Hitas cost area based on the postal code
              type: integer
              format: int32
              minimum: 1
              maximum: 4
              example: 1
        date:
          description: Year of first construction based on the housing company's earliest constructed apartment
          type: string
          format: date
          nullable: true
          readOnly: true

    HousingCompanyDetails:
      description: Single housing company's details
      type: object
      additionalProperties: false
      required:
        - address
        - area
        - date
        - id
        - name
        - state
        - real_estates
        - summary
        - improvements
      properties:
        id:
          description: Housing company ID
          type: string
          readOnly: true
          example: a3181b8fa60b47df8ccba0d554a913bb
        name:
          description: Name information about the housing company
          type: object
          additionalProperties: false
          required:
            - official
            - display
          properties:
            official:
              description: Official name of the housing company. Better suited for official documents, etc.
              type: string
              maxLength: 1024
              example: As Oy Taloyhtiö Helmi
            display:
              description: Simpler form of official name. Better suited for displaying housing company's name
              type: string
              maxLength: 1024
              example: Taloyhtiö Helmi
        business_id:
          description: Official business ID
          type: string
          nullable: true
          pattern: '^$|^\d{7}-\d$'
          example: 1234567-8
        state:
          $ref: '#/components/schemas/HousingCompanyState'
        address:
          $ref: '#/components/schemas/HitasHousingCompanyAddress'
        area:
          description: Hitas cost area information related to the housing company
          type: object
          additionalProperties: false
          readOnly: true
          required:
            - name
            - cost_area
          properties:
            name:
              description: Area name based on the postal code
              type: string
              example: Helsinki Keskusta - Etu-Töölö
            cost_area:
              description: Hitas cost area based on the postal code
              type: integer
              format: int32
              minimum: 1
              maximum: 4
              example: 1
        date:
          description: Year of first construction based on the housing company's earliest constructed building
          type: string
          format: date
          nullable: true
          readOnly: true
        financing_method:
          $ref: '#/components/schemas/ReadOnlyCode'
        building_type:
          $ref: '#/components/schemas/ReadOnlyCode'
        developer:
          $ref: '#/components/schemas/ReadOnlyCode'
        property_manager:
          nullable: true
          $ref: '#/components/schemas/ReadOnlyPropertyManager'
        summary:
          description: Summary data for this housing company across all apartments
          type: object
          additionalProperties: false
          readOnly: true
          required:
            - average_price_per_square_meter
            - total_surface_area
            - total_shares
          properties:
            average_price_per_square_meter:
              description: Average square meter price
              type: number
              minimum: 0
              example: 123000
            realized_acquisition_price:
              description: Realized acquisition price
              type: number
              minimum: 0
              example: 112000.00
            total_surface_area:
              description: Total surface area across all apartments
              type: number
              minimum: 0
              example: 20452.2
            total_shares:
              description: Total number of shares across all apartments
              type: number
              minimum: 0
              example: 98500
        acquisition_price:
          description: Initial acquisition price
          type: number
          format: float
          minimum: 0
          example: 112000.00
        primary_loan:
          description: Primary loan
          type: number
          format: float
          nullable: true
          example: 112000.00
        sales_price_catalogue_confirmation_date:
          description: Sales price catalogue confirmation date
          type: string
          format: date
          nullable: true
        notification_date:
          description: Notification date
          type: string
          format: date
          nullable: true
          readOnly: true
        archive_id:
          description: Archive ID for this housing company
          type: integer
          readOnly: true
          minimum: 1
        notes:
          description: Optional notes for this housing company
          type: string
        last_modified:
          description: Last modified information
          type: object
          additionalProperties: false
          readOnly: true
          required:
            - user
            - datetime
          properties:
            user:
              description: User who last modified this housing company
              type: object
              additionalProperties: false
              required:
                - username
                - first_name
                - last_name
              properties:
                username:
                  description: Username of this user
                  type: string
                  example: mameik01
                first_name:
                  description: First name of this user
                  type: string
                  nullable: true
                  example: Matti
                last_name:
                  description: Last name of this user
                  type: string
                  nullable: true
                  example: Meikäläinen
            datetime:
              description: When this housing company was last modified
              type: string
              format: date-time
        real_estates:
          description: List of real estates this housing company has
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RealEstate'
        improvements:
          description: Contains housing company improvements
          type: object
          additionalProperties: false
          required:
            - market_price_index
            - construction_price_index
          properties:
            market_price_index:
              description: List of improvements for market price index
              type: array
              items:
                description: Improvement
                type: object
                additionalProperties: false
                required:
                  - name
                  - value
                  - completion_date
                properties:
                  name:
                    description: Name of this improvement
                    type: string
                    example: Hissisaneeraus
                  value:
                    description: Original value of this improvement
                    type: number
                    minimum: 0
                    example: 78284
                  completion_date:
                    description: When this improvement was completed
                    type: string
                    pattern: \d{4}-\d{2}
                    example: 2005-08
            construction_price_index:
              description: List of improvements for construction price index
              type: array
              items:
                description: Improvement
                type: object
                additionalProperties: false
                required:
                  - name
                  - value
                  - completion_date
                properties:
                  name:
                    description: Name of this improvement
                    type: string
                    example: Liittyminen HTV-verkkoon
                  value:
                    description: Original value of this improvement
                    type: number
                    minimum: 0
                    example: 13359
                  completion_date:
                    description: When this improvement was completed
                    type: string
                    pattern: \d{4}-\d{2}
                    example: 2004-03

    RealEstate:
      description: Single real estate
      type: object
      additionalProperties: false
      required:
        - id
        - property_identifier
        - address
        - buildings
      properties:
        id:
          description: ID of this building
          type: string
          readOnly: true
          example: c86eaa399ce141d89d962d46bb81ab2b
        property_identifier:
          description: This real estate's official property identifier
          type: string
          pattern: '^\d{1,4}-\d{1,4}-\d{1,4}-\d{1,4}$'
        address:
          $ref: '#/components/schemas/HitasAddress'
        buildings:
          description: List of buildings this real estate has
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/Building'

    Building:
      description: Single building
      type: object
      additionalProperties: false
      required:
        - id
        - address
      properties:
        id:
          description: ID of this building
          type: string
          readOnly: true
          example: 9d0ac35b01eb44829bc84c25f7c1813a
        address:
          $ref: '#/components/schemas/HitasAddress'
        building_identifier:
          description: This building's official identifier
          type: string
          pattern: '^$|^1\d{8}[A-Za-z0-9]$|^\d{1,4}-\d{1,4}-\d{1,4}-\d{1,4} [A-Za-z0-9] \d{3}$'
          nullable: true
          example: 100012345A

    MinimalHousingCompany:
      description: Housing company identifier
      type: object
      additionalProperties: false
      required:
        - id
        - name
      properties:
        id:
          description: Housing company ID
          type: string
          example: a3181b8fa60b47df8ccba0d554a913bb
          readOnly: true
        name:
          description: Name of the housing company
          type: string
          example: Taloyhtiö Helmi
          maxLength: 1024

    Apartment:
      description: Single apartment
      type: object
      additionalProperties: false
      required:
        - id
        - state
        - type
        - surface_area
        - address
        - completion_date
        - ownerships
        - links
      properties:
        id:
          description: Apartment ID
          type: string
          example: b477389cb3514fb1b444052a39bfb65d
        state:
          nullable: true
          $ref: '#/components/schemas/ApartmentState'
        type:
          description: Apartment type
          type: string
          example: h+k
        surface_area:
          description: Surface area of the apartment measured in square meters
          type: number
          nullable: true
          minimum: 0
          example: 67
        rooms:
          description: The amount of rooms in this apartment
          type: number
          nullable: true
          minimum: 1
          example: 4
        address:
          $ref: '#/components/schemas/ApartmentAddress'
        completion_date:
          description: Date that the apartment was completed on
          type: string
          format: date
          nullable: true
        ownerships:
          description: List of apartment's ownerships
          type: array
          items:
            $ref: '#/components/schemas/Ownership'
        links:
          readOnly: true
          $ref: '#/components/schemas/ApartmentLinks'

    ApartmentDetails:
      description: Single apartment details
      type: object
      additionalProperties: false
      required:
        - id
        - state
        - type
        - surface_area
        - shares
        - address
        - completion_date
        - ownerships
        - links
        - building
        - notes
        - improvements
      properties:
        id:
          description: Apartment ID
          type: string
          readOnly: true
          example: b477389cb3514fb1b444052a39bfb65d
        state:
          nullable: true
          $ref: '#/components/schemas/ApartmentState'
        type:
          $ref: '#/components/schemas/ReadOnlyCode'
        surface_area:
          description: Surface area of the apartment measured in square meters
          type: number
          nullable: true
          minimum: 0
          example: 67
        rooms:
          description: The amount of rooms in this apartment
          type: number
          nullable: true
          minimum: 1
          example: 4
        shares:
          description: Share information
          type: object
          additionalProperties: false
          nullable: true
          required:
            - start
            - end
            - total
          properties:
            start:
              description: First share number
              type: integer
              nullable: true
              minimum: 0
              example: 100
            end:
              description: Last share number
              type: integer
              nullable: true
              minimum: 0
              example: 150
            total:
              description: Total number of shares
              type: integer
              minimum: 0
              readOnly: true
              example: 50
        address:
          $ref: '#/components/schemas/ApartmentAddress'
        completion_date:
          description: Date that the apartment's building was completed on
          type: string
          format: date
          nullable: true
        prices:
          $ref: '#/components/schemas/ApartmentPrices'
        ownerships:
          description: List of apartment's ownerships
          type: array
          items:
            $ref: '#/components/schemas/Ownership'
        links:
          readOnly: true
          $ref: '#/components/schemas/ApartmentLinks'
        building:
          description: Building ID this apartment is associated with
          type: string
          writeOnly: true
          example: dc1072975bab4ba69f64814f021c6785
        notes:
          description: Apartment notes
          type: string
          nullable: true
          example: Random notes about the apartment...
        improvements:
          description: Contains housing company improvements
          type: object
          additionalProperties: false
          required:
            - market_price_index
            - construction_price_index
          properties:
            market_price_index:
              description: List of improvements for market price index
              type: array
              items:
                description: Improvement
                type: object
                additionalProperties: false
                required:
                  - name
                  - value
                  - completion_date
                properties:
                  name:
                    description: Name of this improvement
                    type: string
                    example: Hissisaneeraus
                  value:
                    description: Original value of this improvement
                    type: number
                    minimum: 0
                    example: 78284
                  completion_date:
                    description: When this improvement was completed
                    type: string
                    pattern: \d{4}-\d{2}
                    example: 2005-08
            construction_price_index:
              description: List of improvements for construction price index
              type: array
              items:
                description: Improvement
                type: object
                additionalProperties: false
                required:
                  - name
                  - value
                  - completion_date
                  - depreciation_percentage
                properties:
                  name:
                    description: Name of this improvement
                    type: string
                    example: Liittyminen HTV-verkkoon
                  value:
                    description: Original value of this improvement
                    type: number
                    minimum: 0
                    example: 13359
                  completion_date:
                    description: When this improvement was completed
                    type: string
                    pattern: \d{4}-\d{2}
                    example: 2004-03
                  depreciation_percentage:
                    description: |-
                      Depreciation percentage.

                      Can have the following values:
                      - 0
                      - 2.5
                      - 10
                    type: number
                    example: 10.0
                    x-extensible-enum:
                      - 0
                      - 2.5
                      - 10

    ApartmentMaxPriceCalculation:
      description: Calculations for particular index
      type: object
      required:
        - calculation_variables
        - max_price
        - maximum
        - valid_until
      properties:
        calculation_variables:
          $ref: '#/components/schemas/ApartmentMaxPriceCalculationVars'
        max_price:
          description: Maximum price for this index
          type: integer
          minimum: 0
          example: 223558
        valid_until:
          description: The date until this maximum price calculation is valid.
          type: string
          format: date
          example: 2022-10-05
        maximum:
          description: Is this calculated maximum price the highest maximum price.
          type: boolean
          example: true

    ApartmentMaxPriceCalculationVars:
      description: Variables used for apartment's maximum price calculations
      type: object
      required:
        - acquisition_price
        - additional_work_during_construction
        - basic_price
        - index_adjustment
        - apartment_improvements
        - housing_company_improvements
        - debt_free_price
        - debt_free_price_m2
        - apartment_share_of_housing_company_loans
        - completion_date
        - completion_date_index
        - calculation_date
        - calculation_date_index
      properties:
        acquisition_price:
          description: Apartment's acquisition price
          type: integer
          minimum: 0
          example: 199500
        additional_work_during_construction:
          description: Amount of apartment's additional work done during construction
          type: integer
          minimum: 0
          example: 0
        basic_price:
          description: |-
            Basic price is sum of the apartment's acquisition price and the apartment's
            additional work during construction.
          type: integer
          minimum: 0
          example: 199500
        index_adjustment:
          description: |-
            Value increase of the apartment based on the index. Calculated by dividing the
            calculation date index value with the apartment's completion date's index value
            and multiplying the result with the apartment's basic price.
          type: integer
          minimum: 0
          example: 26401
        apartment_improvements:
          description: |-
            Total value of this apartment's improvements. Calculated by summing up all apartment
            improvement's values together.
          type: integer
          minimum: 0
          example: 0
        housing_company_improvements:
          description: |-
            Total value of this apartment's housing company's improvements. Calculated by
            summing up each improvement, first removing the excess and adjusting the improvement
            by the improvement's completion date index for each improvement.
          type: integer
          minimum: 0
          example: 157
        debt_free_price:
          description: |-
            Sum of basic price, index adjustment, apartment improvements and housing company
            improvements.
          type: integer
          minimum: 0
          example: 226058
        debt_free_price_m2:
          description: |-
            Debt free price divided by the apartment's surface area.
          type: integer
          minimum: 0
          example: 7535
        apartment_share_of_housing_company_loans:
          description: |-
            How much the apartment's share of the housing company loans are on the calculation date.
          type: integer
          minimum: 0
          example: 2500
        completion_date:
          description: The date the apartment was completed.
          type: string
          format: date
          example: "2019-11-27"
        completion_date_index:
          description: The index value on the apartment's completion date.
          type: number
          minimum: 0
          example: 129.29
        calculation_date:
          description: Maximum price calculation date.
          type: string
          format: date
          example: "2022-07-05"
        calculation_date_index:
          description: The index value on the calculation date.
          type: number
          minimum: 0
          example: 146.4

    ApartmentMaxPrice:
      description: Single apartment's maximum price calculations
      type: object
      additionalProperties: false
      required:
        - max_price
        - index
        - created
        - valid_until
        - calculations
      properties:
        max_price:
          description: The maximum price for this apartment.
          type: integer
          minimum: 0
          example: 223558
        created:
          description: The timestamp when this maximum price calculation was done.
          type: string
          format: date-time
          example: 2022-07-05T15:39:50.742380
        valid_until:
          description: The date until this maximum price calculation is valid.
          type: string
          format: date
          example: 2022-10-05
        index:
          description: |-
            The index used for the maximum price calculation.

            Can have the following values:
            - construction_price_index
            - market_price_index
            - surface_area_price_ceiling
          type: string
          example: construction_price_index
          x-extensible-enum:
            - construction_price_index
            - market_price_index
            - surface_area_price_ceiling
        calculations:
          description: Calculations for each index
          type: object
          required:
            - construction_price_index
            - market_price_index
            - surface_area_price_ceiling
          properties:
            construction_price_index:
              $ref: '#/components/schemas/ApartmentMaxPriceCalculation'
            market_price_index:
              $ref: '#/components/schemas/ApartmentMaxPriceCalculation'
            surface_area_price_ceiling:
              description: Calculations for particular index
              type: object
              additionalProperties: false
              required:
                - max_price
                - maximum
                - valid_until
              properties:
                calculation_variables:
                  description: Variables used for apartment's surface area price ceiling calculation
                  type: object
                  additionalProperties: false
                  required:
                    - calculation_date
                    - calculation_date_value
                    - surface_area
                  properties:
                    calculation_date:
                      description: Maximum price calculation date.
                      type: string
                      format: date
                      example: "2022-07-05"
                    calculation_date_value:
                      description: The value on the calculation date.
                      type: number
                      minimum: 0
                      example: 129.29
                    surface_area:
                      description: Apartment's surface area
                      type: number
                      minimum: 0
                      example: 30.0
                max_price:
                  description: Maximum price for this index
                  type: integer
                  minimum: 0
                  example: 223558
                valid_until:
                  description: The date until this maximum price calculation is valid.
                  type: string
                  format: date
                  example: 2022-10-05
                maximum:
                  description: Is this calculated maximum price the highest maximum price.
                  type: boolean
                  example: true

        apartment:
          description: Share information
          type: object
          additionalProperties: false
          required:
            - shares
            - rooms
            - apartment_type
            - surface_area
            - address
            - ownership
          properties:
            shares:
              description: Share information
              type: object
              additionalProperties: false
              nullable: true
              required:
                - start
                - end
                - total
              properties:
                start:
                  description: First share number
                  type: integer
                  nullable: true
                  minimum: 0
                  example: 18402
                end:
                  description: Last share number
                  type: integer
                  nullable: true
                  minimum: 0
                  example: 20784
                total:
                  description: Total number of shares
                  type: integer
                  minimum: 0
                  readOnly: true
                  example: 2382
            rooms:
              description: Number of rooms for this apartment
              type: integer
              minimum: 0
              nullable: true
              example: 2
            apartment_type:
              description: Apartment type
              type: string
              example: "h+k"
            surface_area:
              description: Apartment's surface area
              type: number
              minimum: 0
              nullable: true
              example: 30.0
            address:
              description: Apartment's address
              type: object
              additionalProperties: false
              required:
                - street_address
                - floor
                - stair
                - apartment_number
                - postal_code
                - city
              properties:
                street_address:
                  description: Apartment's street address
                  type: string
                  example: Torikatu 18
                floor:
                  description: Apartment's floor
                  type: string
                  example: "1"
                stair:
                  description: Apartment's stair
                  type: string
                  example: B
                apartment_number:
                  description: Apartment number
                  type: integer
                  minimum: 0
                  example: 18
                postal_code:
                  description: Apartment's postal code
                  type: string
                  example: "00100"
                city:
                  description: Apartment's city
                  type: string
                  example: Helsinki
            ownership:
              description: Ownership information
              type: array
              items:
                description: Single ownership
                type: object
                additionalProperties: false
                required:
                  - percentage
                  - name
                properties:
                  percentage:
                    description: Ownership percentage of this apartment
                    type: number
                    minimum: 0
                    maximum: 100
                    example: 100.0
                  name:
                    description: Owner name
                    type: string
                    example: Helsingin kaupunki
        housing_company:
          description: Housing company information for this apartment
          type: object
          additionalProperties: false
          required:
            - official_name
            - archive_id
            - property_manager
          properties:
            official_name:
              description: Official name
              type: string
              example: As Oy Helmi
            archive_id:
              description: Archive ID
              type: integer
              minimum: 0
              example: 792
            property_manager:
              description: Property manager information
              type: object
              additionalProperties: false
              required:
                - name
                - street_address
              properties:
                name:
                  description: Name of this property manager
                  type: string
                  example: Isännöinti Isät Oy
                street_address:
                  description: Property manager's street address
                  type: string
                  example: Isätie 42

    ApartmentLinks:
      description: Links to apartment's related object
      type: object
      additionalProperties: false
      readOnly: true
      required:
        - housing_company
        - real_estate
        - building
        - apartment
      properties:
        housing_company:
          description: Links to apartment's housing company
          type: object
          additionalProperties: false
          required:
            - id
            - display_name
            - link
          properties:
            id:
              description: Housing company ID
              type: string
              example: a3181b8fa60b47df8ccba0d554a913bb
            display_name:
              description: Housing company's display name
              type: string
              example: Taloyhtiö Helmi
            link:
              description: API link to housing company
              type: string
              example: /api/v1/housing-companies/a3181b8fa60b47df8ccba0d554a913bb
        real_estate:
          description: Links to apartment's real estate
          type: object
          additionalProperties: false
          required:
            - id
            - link
          properties:
            id:
              description: Real estate ID
              type: string
              example: c86eaa399ce141d89d962d46bb81ab2b
            link:
              description: API link to real estate
              type: string
              example: /api/v1/housing-companies/a3181b8fa60b47df8ccba0d554a913bb/real-estates/c86eaa399ce141d89d962d46bb81ab2b
        building:
          description: Links to apartment's building
          type: object
          additionalProperties: false
          required:
            - id
            - link
          properties:
            id:
              description: Building ID
              type: string
              example: dc1072975bab4ba69f64814f021c6785
            street_address:
              description: Building's street address ID
              type: string
              example: Eerikinkatu 22
            link:
              description: API link to building
              type: string
              example: /api/v1/housing-companies/a3181b8fa60b47df8ccba0d554a913bb/real-estates/c86eaa399ce141d89d962d46bb81ab2b/buildings/dc1072975bab4ba69f64814f021c6785
        apartment:
          description: Links to apartment's details
          type: object
          additionalProperties: false
          required:
            - id
            - link
          properties:
            id:
              description: Apartment own ID
              type: string
              example: b477389cb3514fb1b444052a39bfb65d
            link:
              description: API link to read apartment's details
              type: string
              example: /api/v1/housing-companies/a3181b8fa60b47df8ccba0d554a913bb/apartments/b477389cb3514fb1b444052a39bfb65d

    ApartmentPrices:
      description: Single apartment price information
      type: object
      additionalProperties: false
      properties:
        debt_free_purchase_price:
          description: TBD
          type: number
          minimum: 0
          nullable: true
          example: 51222
        primary_loan_amount:
          description: TBD
          type: number
          minimum: 0
          nullable: true
          example: 4208
        acquisition_price:
          description: TBD
          type: number
          minimum: 0
          nullable: true
          example: 55430
        purchase_price:
          description: TBD
          type: number
          minimum: 0
          nullable: true
          example: 51222
        first_purchase_date:
          description: TBD
          type: string
          format: date
          nullable: true
          example: 1985-12-10
        latest_purchase_date:
          description: TBD
          type: string
          format: date
          nullable: true
          example: 1989-11-17
        max_prices:
          description: Apartment's maximum Hitas prices
          type: object
          additionalProperties: false
          required:
            - confirmed
            - unconfirmed
          properties:
            confirmed:
              description: Apartment's confirmed maximum Hitas prices
              type: object
              additionalProperties: false
              nullable: true
            unconfirmed:
              description: Apartment's unconfirmed maximum Hitas prices
              type: object
              additionalProperties: false
              required:
                - pre_2011
                - onwards_2011
              properties:
                pre_2011:
                  description: Apartment's maximum Hitas prices for apartments constructed before 2011
                  type: object
                  nullable: true
                  additionalProperties: false
                  required:
                    - construction_price_index
                    - market_price_index
                    - surface_area_price_ceiling
                  properties:
                    construction_price_index:
                      $ref: '#/components/schemas/MaximumValue'
                    market_price_index:
                      $ref: '#/components/schemas/MaximumValue'
                    surface_area_price_ceiling:
                      $ref: '#/components/schemas/MaximumValue'
                onwards_2011:
                  description: Apartment's maximum Hitas prices for apartments constructed 2011 onwards
                  type: object
                  nullable: true
                  additionalProperties: false
                  required:
                    - construction_price_index
                    - market_price_index
                    - surface_area_price_ceiling
                  properties:
                    construction_price_index:
                      $ref: '#/components/schemas/MaximumValue'
                    market_price_index:
                      $ref: '#/components/schemas/MaximumValue'
                    surface_area_price_ceiling:
                      $ref: '#/components/schemas/MaximumValue'

        construction:
          description: Single apartment construction price information
          type: object
          additionalProperties: false
          properties:
            loans:
              description: Loans during construction
              type: number
              minimum: 0
              nullable: true
              example: 9805
            interest:
              description: Interest during construction
              type: number
              minimum: 0
              nullable: true
              example: 3618
            debt_free_purchase_price:
              description: TBD
              type: number
              minimum: 0
              nullable: true
              example: 18281
            additional_work:
              description: TBD
              type: number
              minimum: 0
              nullable: true
              example: 8610

    MaximumValue:
      description: Maximum value
      type: object
      additionalProperties: false
      required:
        - value
        - maximum
      properties:
        value:
          description: Value
          type: number
          nullable: true
          minimum: 0
          example: 120456
        maximum:
          description: Is this value the maximum value for this apartment
          type: boolean

    Ownership:
      description: Ownership information
      type: object
      additionalProperties: false
      required:
        - owner
        - percentage
        - start_date
        - end_date
      properties:
        owner:
          $ref: '#/components/schemas/ReadOnlyOwner'
        percentage:
          description: Percentage that the owner owns of the apartment
          type: number
          minimum: 0
          maximum: 100
          example: 100
        start_date:
          description: Date owner took ownership of the apartment
          type: string
          format: date
          example: 2010-01-01
          nullable: true
        end_date:
          description: Date owner released ownership of the apartment
          type: string
          format: date
          example: null
          nullable: true

    Owner:
      description: Owner information
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - identifier
        - email
      properties:
        id:
          description: ID of this owner
          type: string
          readOnly: true
          example: dc1072975bab4ba69f64814f021c6785
        name:
          description: Name of this owner
          type: string
          example: Martti Virtanen
        identifier:
          description: Identifier (social security number, business id, etc) of this owner
          type: string
          example: 260969-420B
          nullable: true
        email:
          description: Email for this owner
          type: string
          nullable: true
          example: martti.virtanen@example.com

    ReadOnlyOwner:
      description: Owner information
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - identifier
        - email
      properties:
        id:
          description: ID of this owner
          type: string
          example: dc1072975bab4ba69f64814f021c6785
        name:
          description: Name of this owner
          type: string
          readOnly: true
          example: Martti Virtanen
        identifier:
          description: Identifier (social security number, business id, etc) of this owner
          type: string
          readOnly: true
          nullable: true
          example: 260969-420B
        email:
          description: Email for this owner
          type: string
          readOnly: true
          nullable: true
          example: martti.virtanen@example.com

    ReadOnlyAddress:
      description: Address information
      type: object
      additionalProperties: false
      readOnly: true
      required:
        - street_address
        - postal_code
        - city
      properties:
        street_address:
          description: Street address
          type: string
          readOnly: true
          example: Torikatu 16 B 4
        postal_code:
          description: Postal code
          type: string
          readOnly: true
          example: "90100"
        city:
          description: City
          type: string
          readOnly: true
          example: Oulu

    Address:
      description: Address information
      type: object
      additionalProperties: false
      required:
        - street_address
        - postal_code
        - city
      properties:
        street_address:
          description: Street address
          type: string
          example: Torikatu 16 B 4
        postal_code:
          description: Postal code
          type: string
          example: "90100"
        city:
          description: City
          type: string
          example: Oulu

    HitasPostalCode:
      description: Hitas postal code
      type: object
      additionalProperties: false
      required:
        - id
        - value
        - city
        - cost_area
      properties:
        id:
          description: ID of this code
          type: string
          readOnly: true
          example: 21d25cc973d8450f8f89937b9eba0a04
        value:
          description: Hitas postal code
          type: string
          example: "00100"
        city:
          description: City
          type: string
          example: Helsinki
        cost_area:
          description: Hitas cost area
          type: integer
          minimum: 1
          maximum: 4
          example: 2

    HitasHousingCompanyAddress:
      description: Hitas address information for a housing company (includes postal code)
      type: object
      additionalProperties: false
      required:
        - street_address
        - postal_code
        - city
      properties:
        street_address:
          description: Street address
          type: string
          example: Hannunkatu 24
        postal_code:
          description: Hitas postal code
          type: string
          example: "00100"
        city:
          description: City based on the postal code
          type: string
          readOnly: true
          example: Helsinki

    ApartmentAddress:
      description: Apartment address information
      type: object
      additionalProperties: false
      required:
        - street_address
        - postal_code
        - city
        - apartment_number
        - floor
        - stair
      properties:
        street_address:
          description: Street address
          type: string
          example: Hannunkatu 24
        postal_code:
          description: Hitas postal code
          type: string
          readOnly: true
          example: "00100"
        city:
          description: City based on the postal code
          type: string
          readOnly: true
          example: Helsinki
        apartment_number:
          description: Apartment number
          type: number
          minimum: 0
          example: 14
        floor:
          description: Apartment floor
          type: string
          maxLength: 50
          nullable: true
          example: "5"
        stair:
          description: Apartment stair
          type: string
          maxLength: 16
          example: A

    HitasAddress:
      description: Hitas address information
      type: object
      additionalProperties: false
      required:
        - street_address
        - postal_code
        - city
      properties:
        street_address:
          description: Street address
          type: string
          example: Hannunkatu 24
        postal_code:
          description: Hitas postal code
          type: string
          readOnly: true
          example: "00100"
        city:
          description: City based on the postal code
          type: string
          readOnly: true
          example: Helsinki

    ReadOnlyCode:
      description: Hitas codebook entry
      type: object
      additionalProperties: false
      required:
        - id
        - value
        - description
        - code
      properties:
        id:
          description: ID of this code
          type: string
          example: 21d25cc973d8450f8f89937b9eba0a04
        value:
          description: Value for this code
          type: string
          readOnly: true
          example: luhtitalo
        description:
          description: Description of this code
          type: string
          nullable: true
          readOnly: true
          example: This building type is for luhtitalo
        code:
          description: Code number
          type: string
          readOnly: true
          example: 001

    Code:
      description: Hitas codebook entry
      type: object
      additionalProperties: false
      required:
        - id
        - value
        - description
        - code
      properties:
        id:
          description: ID of this code
          type: string
          readOnly: true
          example: 21d25cc973d8450f8f89937b9eba0a04
        value:
          description: Value for this code
          type: string
          example: luhtitalo
        description:
          description: Description of this code
          type: string
          nullable: true
          example: This building type is for luhtitalo
        code:
          description: Code number
          type: string
          example: 001

    ReadOnlyPropertyManager:
      description: Read-only Property manager information
      nullable: true
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - email
        - address
      properties:
        id:
          description: ID of this property manager
          type: string
          example: dc1072975bab4ba69f64814f021c6785
        name:
          description: Name of this property manager
          type: string
          readOnly: true
          example: Ismo Isännöitsijät Oy
        email:
          description: Email for this property manager
          type: string
          readOnly: true
          example: ismo@example.com
        address:
          readOnly: true
          $ref: '#/components/schemas/ReadOnlyAddress'

    PropertyManager:
      description: Property manager information
      type: object
      additionalProperties: false
      required:
        - id
        - name
        - email
        - address
      properties:
        id:
          description: ID of this property manager
          type: string
          readOnly: true
          example: dc1072975bab4ba69f64814f021c6785
        name:
          description: Name of this property manager
          type: string
          example: Ismo Isännöitsijät Oy
        email:
          description: Email for this property manager
          type: string
          example: ismo@example.com
        address:
          $ref: '#/components/schemas/Address'

    YearMonth:
      description: Year and month
      type: string
      pattern: '^\d{4}-\d{2}$'
      example: 2022-01

    Index:
      description: Index contains month this index is active and a its value
      type: object
      additionalProperties: false
      required:
        - month
        - value
      properties:
        month:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/YearMonth'
        value:
          description: Value for this index
          type: number
          minimum: 0
          nullable: true
          example: 127.12
        valid_until:
          $ref: '#/components/schemas/YearMonth'

    HousingCompanyState:
      description: |-
        Housing company state

        Can have the following values:
        - not_ready
        - lt_30_years
        - gt_30_years_not_free
        - gt_30_years_free
        - gt_30_years_plot_department_notification
        - half_hitas
        - ready_no_statistics
      type: string
      example: gt_30_years_not_free
      x-extensible-enum:
        - not_ready
        - lt_30_years
        - gt_30_years_not_free
        - gt_30_years_free
        - gt_30_years_plot_department_notification
        - half_hitas
        - ready_no_statistics

    ApartmentState:
      description: |-
        Apartment state

        Can have the following values:
        - free
        - reserved
        - sold
      type: string
      nullable: true
      example: sold
      x-extensible-enum:
        - free
        - reserved
        - sold

    # Errors

    BadRequestError:
      description: Bad request error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          example: 400
          enum: [400]
        reason:
          description: Error phrase
          type: string
          example: "Bad Request"
          enum: ["Bad Request"]
        message:
          description: Human-readable details about the error
          type: string
          example: Request could not be processed due to malformed request
        error:
          description: |-
            Error reason

            Can have the following values:
            - bad_request
          type: string
          example: bad_request
          x-extensible-enum:
            - bad_request
        fields:
          description: Details about specific validation failures on specific fields
          type: array
          items:
            description: Single field validation details
            type: object
            additionalProperties: false
            required:
              - field
              - message
            properties:
              field:
                description: Name of the field
                type: string
                example: name
              message:
                description: Error message with details about the failure
                type: string
                example: Length exceeds maximum length of 50

    UnauthorizedError:
      description: Unauthorized error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [401]
        reason:
          description: Error phrase
          type: string
          enum: ["Unauthorized"]
        message:
          description: Human-readable details about the error
          type: string
          example: The request requires authentication
        error:
          description: Error reason
          type: string
          enum: [unauthorized]

    NotFoundError:
      description: Not found error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [404]
          example: 404
        reason:
          description: Error phrase
          type: string
          enum: ["Not Found"]
          example: Not Found
        message:
          description: Human-readable details about the error
          type: string
          example: Housing company not found
        error:
          description: |-
            Error reason

            Can have the following values:
            - housing_company_not_found
            - housing_company_property_not_found
            - housing_company_building_not_found
            - apartment_not_found
            - postal_code_not_found
            - property_manager_not_found
            - financing_method_not_found
            - building_type_not_found
            - developer_not_found
            - apartment_type_not_found
          type: string
          example: housing_company_not_found
          x-extensible-enum:
            - housing_company_not_found
            - housing_company_property_not_found
            - housing_company_building_not_found
            - apartment_not_found
            - postal_code_not_found
            - property_manager_not_found
            - financing_method_not_found
            - building_type_not_found
            - developer_not_found
            - apartment_type_not_found

    NotAcceptableError:
      description: Not acceptable error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [406]
          example: 406
        reason:
          description: Error phrase
          type: string
          enum: ["Not Acceptable"]
          example: Not Acceptable
        message:
          description: Human-readable details about the error
          type: string
          example: Only 'application/json' Content-Type is supported.
        error:
          description: Error reason
          type: string
          enum: [not_acceptable]
          example: not_acceptable

    ConflictError:
      description: Conflict error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [409]
          example: 409
        reason:
          description: Error phrase
          type: string
          enum: ["Conflict"]
          example: Conflict
        message:
          description: Human-readable details about the error
          type: string
          example: Owner has active ownerships and cannot be removed.
        error:
          description: |-
            Error reason

            Can have the following values:
            - owner_in_use
            - index_missing
          type: string
          example: owner_in_use
          x-extensible-enum:
            - owner_in_use
            - index_missing

    UnsupportedMediaTypeError:
      description: Unsupported media type error
      type: object
      additionalProperties: false
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [415]
          example: 415
        reason:
          description: Error phrase
          type: string
          enum: ["Unsupported Media Type"]
          example: Unsupported Media Type
        message:
          description: Human-readable details about the error
          type: string
          example: Only 'application/json' Content-Type is supported.
        error:
          description: Error reason
          type: string
          enum: [unsupported_media_type]
          example: unsupported_media_type

    InternalServerError:
      type: object
      additionalProperties: false
      description: Internal server error
      required:
        - status
        - reason
        - message
        - error
      properties:
        status:
          description: Error code
          type: integer
          enum: [500]
          example: 500
        reason:
          description: Error phrase
          type: string
          example: Internal Server Error
        message:
          description: Human-readable details about the error
          type: string
          example: Unexpected internal server error occurred
        error:
          description: Error reason
          type: string
          enum: [internal_server_error]
          example: internal_server_error

  responses:

    BadRequest:
      description: The request was malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestError'
          example:
            status: 400
            reason: Bad Request
            error: bad_request
            details: Some fields failed validation
            fields:
              - field: name
                message: Length exceeds maximum length of 50
              - field: age
                message: Age must be within range [0, 200]
              - field: email
                message: Email is required

    Unauthorized:
      description: The request was not authenticated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnauthorizedError'
          example:
            status: 401
            reason: Unauthorized
            error: unauthorized
            message: The request requires an authentication

    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundError'
          example:
            status: 404
            reason: Not Found
            error: housing_company_not_found
            message: Housing company not found

    NotAcceptable:
      description: Only 'application/json' content-type is supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAcceptableError'
          example:
            status: 405
            reason: Not Acceptable
            error: not_acceptable
            message: Only 'application/json' Content-Type is supported.

    Conflict:
      description: The request could not be completed due to a conflict with the current state of the resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ConflictError'
          example:
            status: 409
            reason: Conflict
            error: owner_in_use
            message: Owner has active ownerships and cannot be removed.

    UnsupportedMediaType:
      description: Only 'application/json' content-type is supported.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnsupportedMediaTypeError'
          example:
            status: 415
            reason: Unsupported Media Type
            error: unsupported_media_type
            message: Only 'application/json' Content-Type is supported.

    InternalServerError:
      description: Unexpected internal server error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerError'
          example:
            status: 500
            reason: Internal Server Error
            error: internal_server_error
            message: Unexpected internal server error occurred
