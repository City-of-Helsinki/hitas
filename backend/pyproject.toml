[tool.poetry]
name = "hitas"
version = "0.1.0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.10"
Django = "^3.2"
django-environ = "^0.9.0"
psycopg2 = "^2.9.3"
drf-oidc-auth = "^3.0.0"
social-auth-app-django = "^5.2.0"
django-helusers = "^0.7.1"
django-enumfields = "^2.1.1"
django-filter = "^22.1"
Markdown = "^3.3.7"
djangorestframework = "^3.13.1"
django-nested-inline = "^0.4.5"
django-crum = "^0.7.9"
django-health-check = "^3.16.5"
drf-nested-routers = "^0.93.4"
django-cors-headers = "^3.13.0"
cx-Oracle = "^8.3.0"
django-safedelete = "^1.3.0"
python-dateutil = "^2.8.2"
xhtml2pdf = "^0.2.8"
django-jinja = "^2.10.2"
num2words = "^0.5.12"
sentry-sdk = "^1.13.0"
tomli = "^2.0.1"
openpyxl = "^3.0.10"
django-auditlog = "^2.2.2"

[tool.poetry.dependencies.uWSGI]
version = "^2.0.20"
# Skip installation on Windows as uWSGI does not support it without Cygwin.
# Windows users should use WSL for their local development virtualenv, but can
# still create another virtualenv in Windows without uWSGI for pre-commit hooks.
markers = "sys_platform != 'win32'"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
pytest-cov = "^4.0.0"
pytest-django = "^4.5.2"
pytest-freezegun = "^0.4.2"
factory-boy = "^3.2.1"
ipython = "^8.4.0"
openapi-core = "^0.16"
testcontainers = {extras = ["postgresql"], version = "^3.6.0"}
django-debug-toolbar = "^3.6.0"
pre-commit = "^3"
pypdf = "^3.6.0"
sqlparse = "^0.4.4"

[tool.poetry.group.migration]
optional = true

[tool.poetry.group.migration.dependencies]
sqlalchemy = "^1.4"
psycopg2-binary = "2.9.5"
faker = "^17"

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings"
addopts = "--nomigrations"
filterwarnings = [
    "ignore::DeprecationWarning:openapi_core*",
]
norecursedirs = [
    "node_modules",
    ".cache",
]

[tool.black]
line_length = 120
target-version = ["py310"]
extend-exclude = "migrations"

[tool.coverage.run]
branch = true
source = ["."]
omit = [
    "*/tests/*",
    "*__init__.py",
    "*/migrations/*",
    "*/venv/*",
    "config/*",
    "manage.py",
    "*/management/*",
    "hitas/oracle_migration/*",
]

[tool.coverage.report]
exclude_lines = [
    "def __str__",
    "def __repr__",
]

[tool.ruff]
fix = true
target-version = "py310"
line-length = 120
extend-exclude = [
    "tests/*",
    "migrations/**",
]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "I",  # isort
    "S",  # flake8-bandit
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "T",  # flake8-print
    "W",  # pycodestyle warnings
]
ignore = [
    "TID252",  # Relative imports allowed
    "S101",  # Asserts are allowed
    "B904",  # Allow raise without from clause
    "B905",  # Allow zip without explicit strict parameter
    "C417",  # map(...) is fine
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports allowed
"hitas/management/commands/hitasmigrate.py" = ["T201"]  # print allowed
"hitas/management/commands/token.py" = ["T201"]  # print allowed
"hitas/oracle_migration/runner.py" = ["T201"]  # print allowed

[tool.ruff.isort]
known-third-party = [
    "django",
    "rest_framework",
]

[tool.ruff.mccabe]
max-complexity = 19

[tool.bandit]
exclude_dirs = [
    "tests/*",
]
